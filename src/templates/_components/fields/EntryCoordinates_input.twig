{# @var craft \craft\web\twig\variables\CraftVariable #}
{#
/**
 * Entry GPS Coordinates plugin for Craft CMS 3.x
 *
 * EntryCoordinates Field Input
 *
 * @author    NTH media
 * @copyright Copyright (c) 2019 NTH media
 * @link      https://nthmedia.nl
 * @package   EntryGpsCoordinates
 * @since     1.0.0
 */
#}

{% import "_includes/forms" as forms %}
{% set suffix = random() %}

{% if value is empty %}
    {% set value = {
        searchQuery: "",
        coordinates: "",
        address: "",
        zoomLevel: "",
    } %}
{% endif %}

<div style="display: flex; align-items: center; margin-bottom: 10px;">
    <label style="margin-right: 10px;">Search:</label>
    {{ forms.text({
        id: 'location-search-' ~ suffix,
        class: 'location-search-' ~ suffix,
        name: name ~ '[searchQuery]',
        value: value.searchQuery,
        placeholder: 'Search Address'
    }) }}
</div>





<style>
    /* Always set the map height explicitly to define the size of the div
     * element that contains the map. */
    .fields-map {
        width: 100%;
        height: 400px;
    }
</style>


<div class="fields-map fields-map-{{ suffix }}"></div>

<div style="margin-top: 10px; display: flex; align-items: center; margin-bottom: 10px;">
    <label style="margin-right: 10px;">Coordinates:</label>
    {{ forms.text({
        id: name,
        class: 'location-coords-' ~ suffix,
        name: name ~ '[coordinates]',
        value: value.coordinates
    }) }}
    <label style="margin-left: 10px; margin-right: 10px;">Address:</label>
    {{ forms.text({
        id: name,
        class: 'location-address-' ~ suffix,
        name: name ~ '[address]',
        value: value.address
    }) }}

    {{ tag('input', {
        type: 'hidden',
        id: name,
        class: 'location-zoom-' ~ suffix,
        name: name ~ '[zoomLevel]',
        value: value.zoomLevel

    }) }}

    <input type="button" value="Delete Marker" class="location-delete-{{ suffix }} btn" style="margin-left: 10px;">
</div>

{% js %}
    EntryCoordinates.setApiKey('{{ googleApiKey }}');
    EntryCoordinates.addField('{{ name }}', { namespace: '{{ namespacedId }}', suffix: '{{ suffix }}', originalLocation: '{{ value.coordinates }}', zoomLevel: '{{ value.zoomLevel }}', defaultCenterCoordinates: '{{ defaultCenterCoordinates }}', defaultZoomLevel: '{{ defaultZoomLevel ?? 1 }}', apiKey: '{{ googleApiKey }}'});
{% endjs %}